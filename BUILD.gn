# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

sdk_output_dir = "${root_out_dir}/sdk"

group("sdk") {
  deps = [
    ":sdk_includes",
    ":sdk_library",
  ]
}

sdk_contents = [
  "//garnet/public/lib/app/cpp",
  "//garnet/public/lib/app/fidl",
  "//garnet/public/lib/fidl/cpp/bindings",
  "//garnet/public/lib/fidl/cpp/bindings:serialization",
  "//garnet/public/lib/fsl:fsl_sources",
  "//garnet/public/lib/fxl:fxl_sources",
  "//garnet/public/lib/media/fidl",
  "//garnet/public/lib/media/transport",
  "//garnet/public/lib/network/fidl",
  "//garnet/public/lib/ui/skia",
  "//garnet/public/lib/ui/view_framework",
  "//garnet/public/lib/ui/view_framework:view_provider",
  "//peridot/public/lib/app_driver/cpp",
  "//peridot/public/lib/context/cpp:context_metadata_builder",
  "//peridot/public/lib/context/fidl",
  "//peridot/public/lib/resolver/fidl",
  "//peridot/public/lib/suggestion/fidl",
  "//peridot/public/lib/user_intelligence/fidl",
]

# A static library that links in all of the code required to build a fuchsia
# application outside of the fuchsia tree.
static_library("sdk_library") {
  complete_static_lib = true
  output_name = "fuchsia"
  output_dir = "${sdk_output_dir}/lib"
  deps = sdk_contents
}

action("sdk_includes") {
  output = "${sdk_output_dir}/include"
  script = "scripts/copy-includes.py"
  args = [
           root_out_dir,
           rebase_path("//"),
           rebase_path(output),
           "!//third_party/",
           "!//garnet/public/lib/fonts/",
           "!//garnet/public/lib/ui/",
         ] + sdk_contents
  outputs = [
    output,  # TODO(rosswang): enumerate output files
  ]
  deps = sdk_contents
}

action("make_vars") {
  script = "scripts/generate-vars.py"
  output = "${sdk_output_dir}/fuchsia.makevars"
  args = [
    root_out_dir,
    rebase_path("//"),
    "//sdk:sdk_library",
    rebase_path(output),
  ]
  outputs = [
    output,
  ]
}

action("shell_vars") {
  script = "scripts/generate-vars.py"
  output = "${sdk_output_dir}/fuchsia.env"
  args = [
    "--format=sh",
    root_out_dir,
    rebase_path("//"),
    "//sdk:sdk_library",
    rebase_path(output),
  ]
  outputs = [
    output,
  ]
}
